#------------------------------------------------------------------------------
# Copyright (c) 2013, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file LICENSE, distributed with this software.
#------------------------------------------------------------------------------
""" An example of how to override tolkit-supplied size hints on your widget.


The toolkit-supplied size hint for MPLCanvas is 480 x 640 pixels, which
prevents you from sizing the canvas smaller. This can be a problem when you are
presenting a large grid of Matplotlib figures.

This example demonstrates how to override the tookit-supplied size hint for
MPLCanvas. By setting resist_width, resist_height, hug_height, and hug_width to
'ignore', you can resize the figure almost freely in any direction.

This serves to demonstrate how the resist, hug and limit constraints interact
to control the size of a widget.

<< autodoc-me >>
"""

import matplotlib.pyplot as plt
import numpy as np

from enaml.widgets.api import (Form, Label, MPLCanvas, ObjectCombo, VGroup,
                               Window)


def make_figure():
    figure, axes = plt.subplots()
    x = np.arange(1000) / 1000
    y = np.sin(2 * np.pi * 5 * x)
    axes.plot(x, y)

    # Call the `tight_layout` method anytime the user resizes the main window.
    # This ensures that the axes titles and axes ticks are adjusted so they
    # remain visible even at small sizes..
    figure.canvas.mpl_connect('resize_event', lambda e: figure.tight_layout())
    return figure


enamldef Main(Window):

    Form:
        Label:
            text = 'resist_height and resist_width'

        ObjectCombo: resist:
            items = ['strong', 'weak', 'ignore']

        Label:
            text = 'hug_height and hug_width'

        ObjectCombo: hug:
            items = ['strong', 'weak', 'ignore']

        Label:
            text = 'limit_height and limit_width'

        ObjectCombo: limit:
            items = ['strong', 'weak', 'ignore']

        MPLCanvas: canvas:
            resist_width << resist.selected
            resist_height << resist.selected
            hug_width << hug.selected
            hug_height << hug.selected
            limit_width << limit.selected
            limit_height << limit.selected

            # This specifies the minimum possible size for the window.
            constraints = [(width >= 100) | 'strong', (height >= 100) | 'strong']
            figure = make_figure()
